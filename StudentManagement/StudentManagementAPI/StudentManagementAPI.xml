<?xml version="1.0"?>
<doc>
    <assembly>
        <name>StudentManagementAPI</name>
    </assembly>
    <members>
        <member name="M:StudentManagementAPI.Controllers.AssignmentController.CreateAssignment(StudentManagementAPI.Models.DTOs.CreateAssignmentDTO)">
            <summary>
            Creates a new assignment with the provided details.
            </summary>
            <param name="assignment">The details of the assignment to be created.</param>
        </member>
        <member name="M:StudentManagementAPI.Controllers.AssignmentController.DeleteAssignment(System.Int32)">
            <summary>
            Deletes an assignment based on the provided assignment ID.
            </summary>
            <param name="assignmentId">The ID of the assignment to be deleted.</param>
        </member>
        <member name="M:StudentManagementAPI.Controllers.AssignmentController.UpdateAssignmentDueDate(StudentManagementAPI.Models.DTOs.AssignmentUpdateDTO)">
            <summary>
            Updates the due date of an existing assignment based on the provided assignment ID.
            </summary>
            <param name="assignmentId">The ID of the assignment to be updated.</param>
            <param name="dueDate">The new due date for the assignment.</param>
        </member>
        <member name="M:StudentManagementAPI.Controllers.AssignmentController.GetAssignmentById(System.Int32)">
            <summary>
            Retrieves an assignment's details based on the provided assignment ID.
            </summary>
            <param name="assignmentId">The ID of the assignment to be retrieved.</param>
        </member>
        <member name="M:StudentManagementAPI.Controllers.AssignmentController.GetAssignments">
            <summary>
            Retrieves a list of all assignments.
            </summary>
        </member>
        <member name="M:StudentManagementAPI.Controllers.AssignmentSubmissionController.SubmitAssignment(StudentManagementAPI.Models.DTOs.AssignmentSubmisssionDTO)">
            <summary>
            Submits an assignment with the provided submission details.
            </summary>
        </member>
        <member name="M:StudentManagementAPI.Controllers.AssignmentSubmissionController.GetAssignedAssignments">
            <summary>
            Gets all the assignments assigned to the student.
            </summary>
            <returns></returns>
        </member>
        <member name="M:StudentManagementAPI.Controllers.AssignmentSubmissionController.GetAssignedAssignmentsByCourse(System.String)">
            <summary>
            Gets all the assignments assigned to the student for a particular course.
            </summary>
            <param name="courseCode">The course code for which the assignments are to be fetched.</param>
            <returns></returns>
        </member>
        <member name="M:StudentManagementAPI.Controllers.AssignmentSubmissionController.GetSubmittedAssignment(System.Int32,System.Int32)">
            <summary>
            Gets the submitted assignment by the student Id.
            </summary>
            <param name="assignmentId"> The assignment id for which the submission status is to be fetched.</param>
            <param name="studentId"> The student id for which the submission status is to be fetched.</param>
            <returns></returns>
        </member>
        <member name="M:StudentManagementAPI.Controllers.AssignmentSubmissionController.GetSubmittedAssignmentStatus(System.Int32)">
            <summary>
            Gets the submission status of the assignment for the student.
            </summary>
            <param name="assignmentId"> The assignment id for which the submission status is to be fetched.</param>
        </member>
        <member name="M:StudentManagementAPI.Controllers.ClassAttendanceController.MarkStudentAttendance(StudentManagementAPI.Models.DTOs.ClassAttendanceDTO)">
            <summary>
            Marks the attendance of a student in a class.
            </summary>
            <param name="classAttendancedto"> ClassAttendanceDTO object containing the details of the class attendance to be marked.</param>
            <returns></returns>
        </member>
        <member name="M:StudentManagementAPI.Controllers.ClassAttendanceController.GetAttendanceByClass(System.Int32)">
            <summary>
            Gets the attendance of a class.
            </summary>
            <param name="classId"> The Id of the class for which the attendance is to be fetched.</param>
            <returns></returns>
        </member>
        <member name="M:StudentManagementAPI.Controllers.ClassAttendanceController.GetAttendanceByStudent(System.Int32)">
            <summary>
            Gets the attendance of a student.
            </summary>
            <param name="studentId"> The Id of the student for which the attendance is to be fetched.</param>
            <returns></returns>
        </member>
        <member name="M:StudentManagementAPI.Controllers.ClassAttendanceController.GetAttendanceByClassAndStudent(System.Int32,System.Int32)">
            <summary>
            Gets the attendance of a student in a class.
            </summary>
            <param name="classId"> The Id of the class for which the attendance is to be fetched.</param>
            <param name="studentId"> The Id of the student for which the attendance is to be fetched.</param>
            <returns></returns>
        </member>
        <member name="M:StudentManagementAPI.Controllers.ClassAttendanceController.UpdateAttendance(StudentManagementAPI.Models.DTOs.ClassAttendanceDTO)">
            <summary>
            Updates the attendance of a student in a class.
            </summary>
            <param name="classAttendancedto"> ClassAttendanceDTO object containing the details of the class attendance to be updated.</param>
            <returns></returns>
        </member>
        <member name="M:StudentManagementAPI.Controllers.ClassController.AddClass(StudentManagementAPI.Models.DTOs.ClassRegisterDTO)">
            <summary>
            Adds a new class to the database.
            </summary>
            <param name="classdto"> ClassRegisterDTO object containing the details of the class to be added.</param>
            <returns></returns>
        </member>
        <member name="M:StudentManagementAPI.Controllers.ClassController.DeleteClass(System.Int32)">
            <summary>
            Deletes a class from the database.
            </summary>
            <param name="classId"> The Id of the class to be deleted.</param>
            <returns></returns>
        </member>
        <member name="M:StudentManagementAPI.Controllers.ClassController.GetClass(System.Int32)">
            <summary>
            Gets the details of a class.
            </summary>
            <param name="classId"> The Id of the class for which the details are to be fetched.</param>
            <returns></returns>
        </member>
        <member name="M:StudentManagementAPI.Controllers.ClassController.GetClasses">
            <summary>
            Gets all the classes in the database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:StudentManagementAPI.Controllers.ClassController.UpdateClassTime(StudentManagementAPI.Models.DTOs.UpdateClassDTO)">
            <summary>
            Updates the timeing of a class.
            </summary>
            <param name="updateclassdto"> UpdateClassDTO object containing the details of the class to be updated.</param>
            <returns></returns>
        </member>
        <member name="M:StudentManagementAPI.Controllers.CourseController.CreateCourse(StudentManagementAPI.Models.DTOs.CourseDTO)">
            <summary>
            Creates a new course with the provided course details.
            </summary>
        </member>
        <member name="M:StudentManagementAPI.Controllers.CourseController.DeleteCourse(System.String)">
            <summary>
            Deletes a course based on the provided course code.
            </summary>
            <param name="courseCode">The code of the course to be deleted.</param>
        </member>
        <member name="M:StudentManagementAPI.Controllers.CourseController.UpdateCourseCreditHours(System.String,System.Int32)">
            <summary>
            Updates the credit hours of an existing course based on the provided course code.
            </summary>
            <param name="courseCode">The code of the course to be updated.</param>
            <param name="creditHours">The new credit hours for the course.</param>
        </member>
        <member name="M:StudentManagementAPI.Controllers.CourseController.GetCourseByCode(System.String)">
            <summary>
            Retrieves a course's details based on the provided course code.
            </summary>
            <param name="courseCode">The code of the course to be retrieved.</param>
        </member>
        <member name="M:StudentManagementAPI.Controllers.CourseController.GetCourses">
            <summary>
            Retrieves a list of all courses.
            </summary>
        </member>
        <member name="M:StudentManagementAPI.Controllers.CourseOfferingController.AssignTeacherForCourseOffering(System.Int32,System.String)">
            <summary>
            Assigns a teacher to a course offering.
            </summary>
            <param name="teacherid"> The Id of the teacher to be assigned.</param>
            <param name="CourseCode"> The code of the course offering to which the teacher is to be assigned.</param>
            <returns></returns>
        </member>
        <member name="M:StudentManagementAPI.Controllers.CourseOfferingController.UpdateTeacherForCourseOffering(System.Int32,System.String)">
            <summary>
            Updates the teacher assigned to a course offering.
            </summary>
            <param name="teacherid"> The Id of the teacher to be assigned.</param>
            <param name="courseOfferingId"> The Id of the course offering to which the teacher is to be updated.</param>
            <returns></returns>
        </member>
        <member name="M:StudentManagementAPI.Controllers.CourseOfferingController.UnassignTeacherFromCourseOffering(System.Int32,System.String)">
            <summary>
            Unassigns a teacher from a course offering.
            </summary>
            <param name="teacherid"> The Id of the teacher to be unassigned.</param>
            <param name="CourseCode"> The code of the course offering from which the teacher is to be unassigned.</param>
            <returns></returns>
        </member>
        <member name="M:StudentManagementAPI.Controllers.CourseOfferingController.GetCourseOfferingByTeacherId(System.Int32)">
            <summary>
            Gets the course offering details by teacher Id.
            </summary>
            <param name="teacherid"> The Id of the teacher for which the course offering details are to be fetched.</param> 
            <returns></returns>
        </member>
        <member name="M:StudentManagementAPI.Controllers.CourseOfferingController.GetCourseOfferingByCourseCode(System.String)">
            <summary>
            Gets the course offering details by course code.
            </summary>
            <param name="CourseCode"> The code of the course for which the course offering details are to be fetched.</param>
            <returns></returns>
        </member>
        <member name="M:StudentManagementAPI.Controllers.CourseOfferingController.GetAllCourseOfferings">
            <summary>
            Gets all the course offerings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:StudentManagementAPI.Controllers.EnrollmentController.EnrollStudent(StudentManagementAPI.Models.DTOs.EnrollmentDTO)">
            <summary>
            Enrolls a student in a course.
            </summary>
            <param name="enrollment"> EnrollmentDTO object containing the details of the enrollment to be made.</param>
            <returns></returns>
        </member>
        <member name="M:StudentManagementAPI.Controllers.EnrollmentController.UnenrollStudent(StudentManagementAPI.Models.DTOs.EnrollmentDTO)">
            <summary>
            Unenrolls a student from a course.
            </summary>
            <param name="enrollment"> EnrollmentDTO object containing the details of the enrollment to be removed.</param>
            <returns></returns>
        </member>
        <member name="M:StudentManagementAPI.Controllers.EnrollmentController.GetEnrollmentsByStudentId(System.Int32)">
            <summary>
            Retrieves a student's enrollments based on the provided student ID.
            </summary>
            <param name="studentId"> The ID of the student for which the enrollments are to be fetched.</param>
            <returns></returns>
        </member>
        <member name="M:StudentManagementAPI.Controllers.EnrollmentController.GetEnrollmentsByCourseId(System.String)">
            <summary>
            Retrieves a course's enrollments based on the provided course code.
            </summary>
            <param name="courseCode"> The code of the course for which the enrollments are to be fetched.</param>
            <returns></returns>
        </member>
        <member name="M:StudentManagementAPI.Controllers.EnrollmentController.GetAllEnrollments">
            <summary>
            Retrieves all enrollments.
            </summary>
            <returns></returns>
        </member>
        <member name="M:StudentManagementAPI.Controllers.StudentController.AddStudent(StudentManagementAPI.Models.DTOs.StudentRegisterDTO)">
            <summary>
            Registers a new student with the provided registration details.
            </summary>
            <param name="student"> StudentRegisterDTO object containing the details of the student to be registered.</param>
        </member>
        <member name="M:StudentManagementAPI.Controllers.StudentController.UpdateStudentEmail(StudentManagementAPI.Models.DTOs.UpdateEmailDTO)">
            <summary>
            Updates the email of a student based on the provided student ID.
            </summary>
            <param name="updateEmaildto"> UpdateEmailDTO object containing the details of the student's email to be updated.</param>
        </member>
        <member name="M:StudentManagementAPI.Controllers.StudentController.UpdateStudentPhone(StudentManagementAPI.Models.DTOs.UpdatePhoneDTO)">
            <summary>
            Updates the phone number of a student based on the provided student ID.
            </summary>
            <param name="updatePhonedto"> UpdatePhoneDTO object containing the details of the student's phone number to be updated.</param>
            <returns></returns>
        </member>
        <member name="M:StudentManagementAPI.Controllers.StudentController.UpdateStudentStatus(System.Int32,System.String)">
            <summary>
            Updates the status of a student based on the provided student ID.
            </summary>
            <param name="studentId"> The ID of the student to be updated.</param>
            <param name="status"> The new status for the student.</param>
            <returns></returns>
        </member>
        <member name="M:StudentManagementAPI.Controllers.StudentController.GetStudentById(System.Int32)">
            <summary>
            Retrieves a student's details based on the provided student ID.
            </summary>
            <param name="studentId">The ID of the student to be retrieved.</param>
        </member>
        <member name="M:StudentManagementAPI.Controllers.StudentController.GetStudents">
            <summary>
            Retrieves a list of all students.
            </summary>
        </member>
        <member name="M:StudentManagementAPI.Controllers.StudentController.DeleteStudent(System.Int32)">
            <summary>
            Deletes a student based on the provided student ID.
            </summary>
            <param name="studentId">The ID of the student to be deleted.</param>
        </member>
        <member name="M:StudentManagementAPI.Controllers.TeacherController.AddTeacher(StudentManagementAPI.Models.DTOs.TeacherRegisterDTO)">
            <summary>
            Registers a new teacher with the provided registration details.
            </summary>
            <param name="teacher">The registration details of the teacher.</param>
        </member>
        <member name="M:StudentManagementAPI.Controllers.TeacherController.GetTeacherById(System.Int32)">
            <summary>
            Retrieves a teacher's details based on the provided teacher ID.
            </summary>
            <param name="teacherId">The ID of the teacher to be retrieved.</param>
        </member>
        <member name="M:StudentManagementAPI.Controllers.TeacherController.GetTeachers">
            <summary>
            Retrieves a list of all teachers.
            </summary>
        </member>
        <member name="M:StudentManagementAPI.Controllers.TeacherController.UpdateTeacherEmail(StudentManagementAPI.Models.DTOs.UpdateEmailDTO)">
            <summary>
            Updates a teacher's email based on the provided teacher ID.
            </summary>
            <param name="updateEmaildto"> The ID of the teacher and the new email to be updated.</param>
        </member>
        <member name="M:StudentManagementAPI.Controllers.TeacherController.UpdateTeacherPhone(StudentManagementAPI.Models.DTOs.UpdatePhoneDTO)">
            <summary>
            Updates a teacher's phone number based on the provided teacher ID.
            </summary>
            <param name="updatePhonedto"> The ID of the teacher and the new phone number to be updated.</param>
            <returns></returns>
        </member>
        <member name="M:StudentManagementAPI.Controllers.TeacherController.DeleteTeacher(System.Int32)">
            <summary>
            Deletes a teacher based on the provided teacher ID.
            </summary>
            <param name="teacherId">The ID of the teacher to be deleted.</param>
        </member>
        <member name="M:StudentManagementAPI.Controllers.UserController.Login(StudentManagementAPI.Models.DTOs.UserLoginDTO)">
            <summary>
            Authenticates a user based on the provided login credentials for JWT Token.
            </summary>
            <param name="user">The login details of the user.</param>
        </member>
        <member name="M:StudentManagementAPI.Controllers.UserController.Register(StudentManagementAPI.Models.DTOs.UserRegisterDTO)">
            <summary>
            Registers a new user with the provided registration details.
            </summary>
            <param name="user">The registration details of the user.</param>
        </member>
        <member name="M:StudentManagementAPI.Controllers.UserController.GetAllUsers">
            <summary>
            Retrieves all users.
            </summary>
            <returns>List of registered user DTOs</returns>
        </member>
        <member name="M:StudentManagementAPI.Controllers.UserController.ActivateUser(System.Int32)">
            <summary>
            Activates a user.
            </summary>
            <param name="id">User ID of the user to be activated</param>
            <returns>Action result</returns>
        </member>
        <member name="M:StudentManagementAPI.Controllers.UserController.DeactivateUser(System.Int32)">
            <summary>
            Deactivates a user.
            </summary>
            <param name="id">User ID of the user to be deactivated</param>
            <returns>Action result</returns>
        </member>
    </members>
</doc>
